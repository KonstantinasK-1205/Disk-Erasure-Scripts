#!/bin/bash
# Script written by Konstantinas Kau≈°as
# Main script purpose is to sort and manage certificates:
#		1) Find and remove certificate duplicates ( if someone saved same certificates more than once )
#		2) Fixing Drive erasure .pdf filenames, correcting disk capacity size and removing unneccessary text
#		3) Sort all certificates by disk FFactor (2.5", 3.5") which was gathered from Disk Output Log
#		4) Sort all FFactor drives by Manufacturer, Capacity and its sanitizing status

export LC_ALL='C'

# Declate global array < PDF Name Pattern > = Directory Name
declare -A mafArray
mafArray["WDC"]=WD
mafArray["Maxtor"]=Maxtor
mafArray["HGST"]=HGST
mafArray["Hitachi"]=HGST
mafArray["HTS"]=HGST
mafArray["SanDisk"]=SanDisk
mafArray["TOSHIBA"]=Toshiba
mafArray["OCZ"]=OCZ
mafArray["FUJITSU"]=Fujitsu
mafArray["TEAM"]=TeamGroup
mafArray["ADATA"]=ADATA
mafArray["ASP"]=ADATA
mafArray["LITEONIT"]=LiteOnIt
mafArray["HP"]=HP
mafArray["Corsair"]=Corsair
mafArray["Micron"]=Micron
mafArray["CT"]=Crucial
mafArray["SAMSUNG"]=Samsung
mafArray["MZ-"]=Samsung
mafArray["MTFD"]=Samsung
mafArray["7mm"]=Samsung
mafArray["ST"]=Seagate
mafArray["GB0"]=Seagate
mafArray["Intel"]=Intel
mafArray["INTEL"]=Intel
mafArray["HFS"]=SKHynx

# Declare global array < Program size > = < GB > Capacity
declare -A sizeConv
sizeConv["14 9 GB"]="16 GB"
sizeConv["18 6 GB"]="16 GB"
sizeConv["22 4 GB"]="24 GB"
sizeConv["28 8 GB"]="32 GB"
sizeConv["29 8 GB"]="32 GB"
sizeConv["37 3 GB"]="40 GB"
sizeConv["46 6 GB"]="50 GB"
sizeConv["59 6 GB"]="64 GB"
sizeConv["74 5 GB"]="80 GB"
sizeConv["93 2 GB"]="100 GB"
sizeConv["112 GB"]="120 GB"
sizeConv["119 GB"]="120 GB"
sizeConv["149 GB"]="160 GB"
sizeConv["168 GB"]="180 GB"
sizeConv["179 GB"]="180 GB"
sizeConv["186 GB"]="180 GB"
sizeConv["224 GB"]="250 GB"
sizeConv["233 GB"]="250 GB"
sizeConv["234 GB"]="250 GB"
sizeConv["236 GB"]="250 GB"
sizeConv["238 GB"]="250 GB"
sizeConv["279 GB"]="320 GB"
sizeConv["298 GB"]="320 GB"
sizeConv["335 GB"]="320 GB"
sizeConv["373 GB"]="320 GB"
sizeConv["447 GB"]="500 GB"
sizeConv["466 GB"]="500 GB"
sizeConv["477 GB"]="500 GB"
sizeConv["481 GB"]="500 GB"
sizeConv["559 GB"]="640 GB"
sizeConv["596 GB"]="640 GB"
sizeConv["699 GB"]="750 GB"
sizeConv["894 GB"]="1000 GB"
sizeConv["932 GB"]="1000 GB"
sizeConv["1 36 TB"]="1500 GB"
sizeConv["1 82 TB"]="2000 GB"
sizeConv["2 73 TB"]="3000 GB"
sizeConv["3 64 TB"]="4000 GB"

RenameFunc(){
	expr="$1"
	repl="$2"
	file="$3"

	if [[ -z $file ]]; then
		Change=*.pdf
	else
		Change="$file"
	fi
	rename "$expr" "$repl" $file 2>/dev/null &
}

RenameSizes(){
	local diskName=$(ls *.pdf)
	IFS=$'\n'
	for file in $diskName; do
	(
		size=$(echo "$file" | grep -oP "(?<= -) .*.B" | sort -u)
		size=${size:1}
		if [[ -v "sizeConv[${size}]" ]]; then
			RenameFunc "$size" "${sizeConv[$size]}" "$file"
		fi
	) &
	done
	wait
}

DuplicateChecker(){
	declare -A fileList
	IFS=$'\n'
	for file in $(ls -r); do
		serial=$(echo "$file" | grep -oP "(?<=S-N ).*?(?=\))")
		if [[ -n "$serial" ]]; then
			if [[ -v "fileList[$serial]" ]]; then
				curntFileDate=$(echo "$file" | grep -oP "([0-9]+-){2,}.*?(?=.pdf)" | tr -d " -")
				arrayFileDate=$(echo "fileList[$serial]" | grep -oP "([0-9]+-){2,}.*?(?=.pdf)" | tr -d " -")
				if [[ $curntFileDate -gt $arrayFileDate ]]; then
					rm "${fileList[$serial]}"
				else
					rm "$file"
					continue
				fi
			fi
			fileList["$serial"]="$file"
		fi
	done
}

Mover(){
	pattern="$1"
	destination="$2"
	# If pattern exist, then move to destination
	if [[ $(find . -maxdepth 1 -name "*${pattern}*") ]]; then
		# Check if destination exist
		if [ ! -d "$destination" ]; then
			mkdir -p "$destination"
		fi
		mv *"$pattern"*.pdf "$destination"/
	fi
}
	
FactorSorter(){
	# Main sorter based on log file
	for certificate in *.pdf; do
		serial=$(echo "$certificate" | grep -waom 1 "S-N.*)")
		if [[ -n "$serial" ]]; then
			serial=${serial:4}
			serial=${serial::-1}
			if grep -q "$serial" <<< "${diskLists}"; then
				ffactor=$(echo "$diskLists" | grep -Fm 1 $serial)
				ffactor=${ffactor//*@/}

				if [ ! -d "$ffactor" ]; then
					mkdir -p "$ffactor"
				fi

				mv "$certificate" "$ffactor" 2>/dev/null
			fi
		fi
	done

	# Moving leftovers
	for certificate in *.pdf; do
		mv "$certificate" "Unknown" 2>/dev/null
	done
}

SizeSorter(){
	diskSizes=$(ls | grep -oP "(?<= -) .*.B" | sort -u)
	for size in $diskSizes; do
		Mover "$size" "${size:1}"

		cd "${size:1}" > /dev/null
		DiskAmount=$(ls | grep ".pdf" | wc -l)
		StateMafSorter
		cd .. > /dev/null
		wait
	done
}

StateMafSorter(){
	shopt -s nocaseglob
	for pattern in "${!mafArray[@]}"; do
		dir="${mafArray[$pattern]}"
		Mover "$pattern" "$dir"
	done
	wait

	mkdir -p Blogi
	for File in */*.pdf; do
	(
		if [[ $(pdftotext -raw "$File" - | grep "FAILED") ]]; then
			mv "$File" Blogi/
		fi
	)
	done && wait
}

echo -en "\e[3J"
rm -rf *"iLO LUN"*

# Load disk drives log, and extract only Serial and FFactor
diskLists=$(logparser -tf "Succeed"* -c Serial FFactor)

DuplicateChecker
RenameSizes


IFS=$'\n'
FactorSorter
for FactorSize in */; do
	cd "$FactorSize" > /dev/null
	SizeSorter
	cd .. > /dev/null
done
find . -type d -empty -delete
